{
  "db_name": "PostgreSQL",
  "query": "\nMERGE INTO web_domain_permissions AS perm\n    USING (\n        WITH input AS (\n            SELECT t.*, $2::bigint as self_id FROM unnest(\n            $4::boolean[],$5::boolean[],$6::boolean[],$7::boolean[],$8::boolean[],$9::boolean[],$10::boolean[],$11::boolean[],$12::boolean[],$13::boolean[],$14::boolean[],$15::boolean[],$16::boolean[],$17::boolean[],$18::boolean[]\n                ,$3::bigint[]\n              ) AS t(\n                admin,view_domain,modify_domain,list_subdomain,create_subdomain,delete_subdomain,list_accounts,create_accounts,modify_accounts,delete_accounts,list_alias,create_alias,delete_alias,list_permissions,manage_permissions,\n                user_id\n            )\n        ) SELECT\n            input.user_id AS target_user_id,CASE WHEN input.self_id = ANY(domains.domain_owner) OR (slf.manage_permissions AND (slf.admin OR slf.admin))               THEN input.admin               ELSE target.admin                 END AS admin,CASE WHEN input.self_id = ANY(domains.domain_owner) OR (slf.manage_permissions AND (slf.admin OR slf.view_domain))               THEN input.view_domain               ELSE target.view_domain                 END AS view_domain,CASE WHEN input.self_id = ANY(domains.domain_owner) OR (slf.manage_permissions AND (slf.admin OR slf.modify_domain))               THEN input.modify_domain               ELSE target.modify_domain                 END AS modify_domain,CASE WHEN input.self_id = ANY(domains.domain_owner) OR (slf.manage_permissions AND (slf.admin OR slf.list_subdomain))               THEN input.list_subdomain               ELSE target.list_subdomain                 END AS list_subdomain,CASE WHEN input.self_id = ANY(domains.domain_owner) OR (slf.manage_permissions AND (slf.admin OR slf.create_subdomain))               THEN input.create_subdomain               ELSE target.create_subdomain                 END AS create_subdomain,CASE WHEN input.self_id = ANY(domains.domain_owner) OR (slf.manage_permissions AND (slf.admin OR slf.delete_subdomain))               THEN input.delete_subdomain               ELSE target.delete_subdomain                 END AS delete_subdomain,CASE WHEN input.self_id = ANY(domains.domain_owner) OR (slf.manage_permissions AND (slf.admin OR slf.list_accounts))               THEN input.list_accounts               ELSE target.list_accounts                 END AS list_accounts,CASE WHEN input.self_id = ANY(domains.domain_owner) OR (slf.manage_permissions AND (slf.admin OR slf.create_accounts))               THEN input.create_accounts               ELSE target.create_accounts                 END AS create_accounts,CASE WHEN input.self_id = ANY(domains.domain_owner) OR (slf.manage_permissions AND (slf.admin OR slf.modify_accounts))               THEN input.modify_accounts               ELSE target.modify_accounts                 END AS modify_accounts,CASE WHEN input.self_id = ANY(domains.domain_owner) OR (slf.manage_permissions AND (slf.admin OR slf.delete_accounts))               THEN input.delete_accounts               ELSE target.delete_accounts                 END AS delete_accounts,CASE WHEN input.self_id = ANY(domains.domain_owner) OR (slf.manage_permissions AND (slf.admin OR slf.list_alias))               THEN input.list_alias               ELSE target.list_alias                 END AS list_alias,CASE WHEN input.self_id = ANY(domains.domain_owner) OR (slf.manage_permissions AND (slf.admin OR slf.create_alias))               THEN input.create_alias               ELSE target.create_alias                 END AS create_alias,CASE WHEN input.self_id = ANY(domains.domain_owner) OR (slf.manage_permissions AND (slf.admin OR slf.delete_alias))               THEN input.delete_alias               ELSE target.delete_alias                 END AS delete_alias,CASE WHEN input.self_id = ANY(domains.domain_owner) OR (slf.manage_permissions AND (slf.admin OR slf.list_permissions))               THEN input.list_permissions               ELSE target.list_permissions                 END AS list_permissions,CASE WHEN input.self_id = ANY(domains.domain_owner) OR (slf.admin AND slf.manage_permissions)                              THEN input.manage_permissions  ELSE target.manage_permissions    END AS manage_permissions,\n            slf.domain_id as domain_id\n        FROM input\n            JOIN virtual_domains domains ON domains.id = $1\n            JOIN flattened_web_domain_permissions slf ON slf.domain_id = $1 AND slf.user_id = input.self_id\n            LEFT JOIN web_domain_permissions target ON target.domain_id = domains.id AND target.user_id = input.user_id\n   ) AS row ON perm.domain_id = row.domain_id AND perm.user_id = row.target_user_id\nWHEN MATCHED THEN\n    UPDATE SET\n    admin = row.admin,view_domain = row.view_domain,modify_domain = row.modify_domain,list_subdomain = row.list_subdomain,create_subdomain = row.create_subdomain,delete_subdomain = row.delete_subdomain,list_accounts = row.list_accounts,create_accounts = row.create_accounts,modify_accounts = row.modify_accounts,delete_accounts = row.delete_accounts,list_alias = row.list_alias,create_alias = row.create_alias,delete_alias = row.delete_alias,list_permissions = row.list_permissions,manage_permissions = row.manage_permissions,\n        domain_id = row.domain_id,\n        user_id = row.target_user_id\nWHEN NOT MATCHED THEN\n    INSERT (\n    admin,view_domain,modify_domain,list_subdomain,create_subdomain,delete_subdomain,list_accounts,create_accounts,modify_accounts,delete_accounts,list_alias,create_alias,delete_alias,list_permissions,manage_permissions,\n        domain_id,\n        user_id\n    ) VALUES (\nrow.admin,row.view_domain,row.modify_domain,row.list_subdomain,row.create_subdomain,row.delete_subdomain,row.list_accounts,row.create_accounts,row.modify_accounts,row.delete_accounts,row.list_alias,row.create_alias,row.delete_alias,row.list_permissions,row.manage_permissions,\n       row.domain_id,\n       row.target_user_id\n)",
  "describe": {
    "columns": [],
    "parameters": {
      "Left": [
        "Int8",
        "Int8",
        "Int8Array",
        "BoolArray",
        "BoolArray",
        "BoolArray",
        "BoolArray",
        "BoolArray",
        "BoolArray",
        "BoolArray",
        "BoolArray",
        "BoolArray",
        "BoolArray",
        "BoolArray",
        "BoolArray",
        "BoolArray",
        "BoolArray",
        "BoolArray"
      ]
    },
    "nullable": []
  },
  "hash": "4fea8abaf1d97e5cfc5b366eb94ed8462be77f1504af3791b0b44be42f359001"
}
